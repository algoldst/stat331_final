ifelse(race=="N", "Native American",
ifelse(race=="O", "Other", "not recorded")))))))) %>%
mutate(number_killed = rep(1, length(shootings$name))) %>%
aggregate(number_killed ~ year(date) + race, data=., sum) %>%
ggplot(aes(x=`year(date)`, y=number_killed, color=race)) +
geom_line()
# First, we need each race's total population for 2015-2020.
census <- read.csv(here::here("acs2017_census_tract_data.csv"))
census <- census %>%
# Convert percentages to raw numbers
mutate(across(.cols = c("Hispanic", "White", "Black", "Native", "Asian", "Pacific"),
.fns = ~.x/100.0*TotalPop)) %>%
# Sum them up
select(c("Hispanic", "White", "Black", "Native", "Asian", "Pacific")) %>%
colSums(na.rm = TRUE) %>%
round()
census
# Save total as US Population total
us_population <- sum(census)
# Correct the names to be consistent with our dataset
census <- census %>%
cbind(names(census)) %>%
as.data.frame %>%
mutate(V2 = ifelse(V2 == "Native", "Native American", V2),
V2 = ifelse(V2 == "Pacific", "Other", V2)) %>%
rename(race = V2)
# Flip the order
census <- census[c(2,1)]
# Combine back into by_race
by_race <- right_join(census, by_race, by="race")
# Get adjusted percentages by racial populations
by_race <- by_race %>%
rename(Population = ".")
by_race %>%
mutate(Group_Population = as.integer(Population)) %>%
mutate(Group_Population_Percent = Group_Population / us_population * 100) %>%
mutate(Adj_Percent = percent / (Group_Population / us_population) ) %>%
arrange(desc(Adj_Percent))
by_race
census
dplyr::rename(`Native American` = `Native, Other = Pacific)
pivot_longer(cols = c("Hispanic", "White", "Black", "Native", "Asian", "Pacific"))
by_race %>%
mutate(Group_Population = as.integer(Population)) %>%
mutate(Group_Population_Percent = Group_Population / us_population * 100) %>%
mutate(Adj_Percent = percent / (Group_Population / us_population) ) %>%
arrange(desc(Adj_Percent))
by_race %>%
mutate(Group_Population = as.integer(Population)) %>%
mutate(Group_Population_Percent = Group_Population / us_population * 100) %>%
mutate(Adj_Percent = percent / (Group_Population_Percent) ) %>%
arrange(desc(Adj_Percent))
by_race %>%
mutate(Group_Population = as.integer(Population)) %>%
mutate(Group_Population_Percent = Group_Population / us_population * 100) %>%
mutate(Adj_Percent = percent / (Group_Population_Percent) ) %>%
select(c("race", "n", "Group_Population", "percent", "Adj_Percent"))
by_race %>%
mutate(Group_Population = as.integer(Population)) %>%
mutate(Group_Population_Percent = Group_Population / us_population * 100) %>%
mutate(Adj_Percent = percent / (Group_Population_Percent) ) %>%
select(c("race", "n", "Group_Population_Percent", "percent", "Adj_Percent"))
by_race %>%
mutate(Group_Population = as.integer(Population)) %>%
mutate(Group_Population_Percent = Group_Population / us_population * 100) %>%
mutate(Adj_Percent = percent / (Group_Population_Percent) * 100 ) %>%
select(c("race", "n", "Group_Population_Percent", "percent", "Adj_Percent"))
by_race %>%
mutate(Group_Population = as.integer(Population)) %>%
mutate(Group_Population_Percent = Group_Population / us_population * 100) %>%
mutate(Adj_Percent = percent / (Group_Population_Percent) * 100 ) %>%
select(c("race", "n", "Group_Population_Percent", "percent", "Adj_Percent")) %>%
arrange(desc(Adj_Percent))
by_race %>%
mutate(Group_Population = as.integer(Population)) %>%
mutate(Group_Population_Percent = Group_Population / us_population * 100) %>%
mutate(Killed_vs_Percent_Ratio = percent / (Group_Population_Percent) * 100 ) %>%
mutate(Adj_Percent = n / Group_Population) %>%
select(c("race", "n", "Group_Population_Percent", "percent", "Adj_Percent" "Killed_vs_Percent_Ratio")) %>%
by_race %>%
mutate(Group_Population = as.integer(Population)) %>%
mutate(Group_Population_Percent = Group_Population / us_population * 100) %>%
mutate(Killed_vs_Percent_Ratio = percent / (Group_Population_Percent) * 100 ) %>%
mutate(Adj_Percent = n / Group_Population) %>%
select(c("race", "n", "Group_Population_Percent", "percent", "Adj_Percent", "Killed_vs_Percent_Ratio")) %>%
arrange(desc(Adj_Percent))
by_race %>%
mutate(Group_Population = as.integer(Population)) %>%
mutate(Group_Population_Percent = Group_Population / us_population * 100) %>%
mutate(Killed_vs_Percent_Ratio = percent_of_killed / (Group_Population_Percent) * 100 ) %>%
mutate(Adj_Percent = n / Group_Population) %>%
select(c("race", "n", "Group_Population_Percent", "percent_of_killed", "Adj_Percent", "Killed_vs_Percent_Ratio")) %>%
arrange(desc(Adj_Percent))
rm(list=ls())
# Plotting by Year
shootings %>%
# Replace abbreviated race identifier with race
mutate(race = as.factor( ifelse(race=="W","White",
ifelse(race=="B","Black",
ifelse(race=="H", "Hispanic",
ifelse(race=="A", "Asian",
ifelse(race=="N", "Native American",
ifelse(race=="O", "Other", "not recorded")))))))) %>%
mutate(number_killed = rep(1, length(shootings$name))) %>%
aggregate(number_killed ~ year(date) + race, data=., sum) %>%
ggplot(aes(x=`year(date)`, y=number_killed, fill=race)) +
geom_bar(stat="identity", position="dodge2")
knitr::opts_chunk$set(echo = TRUE)
# Libraries
library(tidyverse)
library(lubridate)
# Import
shootings <- read.csv("https://raw.githubusercontent.com/washingtonpost/data-police-shootings/master/fatal-police-shootings-data.csv")
# Clean up data
shootings <- shootings %>%
mutate(date = lubridate::ymd(date)) %>%   # Convert date to Lubridate
mutate(age = round(age)) %>%              # Make all ages integers
# Fix blank strings "" --> "not recorded"
mutate(across(.cols = c(name,
manner_of_death,
armed,
age,
gender,
race,
city,
state,
signs_of_mental_illness,
threat_level,
flee,
body_camera),
.fns = ~ifelse(.x == "", "not recorded", .x))) %>%
# Factorize
mutate(gender = as.factor(gender),
race = as.factor(race),
signs_of_mental_illness = as.logical(signs_of_mental_illness),
threat_level = as.factor(threat_level),
flee = as.factor(flee),
body_camera = as.logical(body_camera) )
shootings %>%
mutate(year = year(date)) %>%
mutate(count = 1) %>%
aggregate(count ~ flee + year, data = ., sum) %>%
mutate(percent_of_killed.Total = count / sum(count))
nonweapon <-
shootings %>%
filter(armed == "unarmed" |
armed == "toy weapon" |
armed == "claimed to be armed" |
armed == "unknown weapon" |
armed == "not recorded")
nonweapon %>%
group_by(armed) %>%
count() %>%
arrange(desc(n)) %>%
mutate(`Proportion of Unarmed` = n/length(nonweapon$armed)*100) %>%
mutate(`Percentage of Total` = n/length(shootings$armed)*100) -> nonweapon_proportion
# Display nonweapon statistics
nonweapon_proportion
# Splot proportions split into separate Total and Unarmed facets
nonweapon_proportion %>%
pivot_longer(c("Proportion of Unarmed", "Percentage of Total"),
names_to="Classification",
values_to="Proportion") %>%
ggplot() +
geom_bar(mapping=aes(x=armed, y=Proportion, fill=armed), stat="identity") +
# Separate Unarmed and Total proportions
facet_wrap(Classification~., scales="free_y") +
# Hide x labels
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
labs(title="Breakdown of Unarmed by 'Weapon' & As Percentage of All Deaths",
fill = "Unarmed 'Weapon'")
by_race <- shootings %>%
# Replace abbreviated race identifier with race
mutate(race = as.factor( ifelse(race=="W","White",
ifelse(race=="B","Black",
ifelse(race=="H", "Hispanic",
ifelse(race=="A", "Asian",
ifelse(race=="N", "Native American",
ifelse(race=="O", "Other", "not recorded")))))))) %>%
group_by(race) %>%
count() %>%
arrange(desc(n)) %>%
mutate(percent_of_killed = n/length(shootings$race) * 100)
by_race
# Plot it
by_race %>%
ggplot(aes(x=reorder(race, n), y=n, fill=race)) +
geom_bar(stat="identity") +
coord_flip() +
labs(title="Number of US Police Shootings by Race Since 2015",
x="Race",
y="Number of Deaths")
# Plotting by Year
shootings %>%
# Replace abbreviated race identifier with race
mutate(race = as.factor( ifelse(race=="W","White",
ifelse(race=="B","Black",
ifelse(race=="H", "Hispanic",
ifelse(race=="A", "Asian",
ifelse(race=="N", "Native American",
ifelse(race=="O", "Other", "not recorded")))))))) %>%
mutate(number_killed = rep(1, length(shootings$name))) %>%
aggregate(number_killed ~ year(date) + race, data=., sum) %>%
ggplot(aes(x=`year(date)`, y=number_killed, fill=race)) +
geom_bar(stat="identity", position="dodge2")
shootings %>%
# Replace abbreviated race identifier with race
mutate(race = as.factor( ifelse(race=="W","White",
ifelse(race=="B","Black",
ifelse(race=="H", "Hispanic",
ifelse(race=="A", "Asian",
ifelse(race=="N", "Native American",
ifelse(race=="O", "Other", "not recorded")))))))) %>%
mutate(number_killed = rep(1, length(shootings$name))) %>%
aggregate(number_killed ~ year(date) + race, data=., sum) %>%
ggplot(aes(x=`year(date)`, y=number_killed, color=race)) +
geom_line()
# First, we need each race's total population for 2015-2020.
census <- read.csv(here::here("acs2017_census_tract_data.csv"))
census <- census %>%
# Convert percentages to raw numbers
mutate(across(.cols = c("Hispanic", "White", "Black", "Native", "Asian", "Pacific"),
.fns = ~.x/100.0*TotalPop)) %>%
# Sum them up
select(c("Hispanic", "White", "Black", "Native", "Asian", "Pacific")) %>%
colSums(na.rm = TRUE) %>%
round()
census
# Save total as US Population total
us_population <- sum(census)
# Correct the names to be consistent with our dataset
census <- census %>%
cbind(names(census)) %>%
as.data.frame %>%
mutate(V2 = ifelse(V2 == "Native", "Native American", V2),
V2 = ifelse(V2 == "Pacific", "Other", V2)) %>%
rename(race = V2)
# Flip the order
census <- census[c(2,1)]
# Combine back into by_race
by_race <- right_join(census, by_race, by="race")
# Get adjusted percentages by racial populations
by_race <- by_race %>%
rename(Population = ".")
by_race %>%
mutate(Group_Population = as.integer(Population)) %>%
mutate(Group_Population_Percent = Group_Population / us_population * 100) %>%
mutate(Killed_vs_Percent_Ratio = percent_of_killed / (Group_Population_Percent) * 100 ) %>%
mutate(Adj_Percent = n / Group_Population) %>%
select(c("race", "n", "Group_Population_Percent", "percent_of_killed", "Adj_Percent", "Killed_vs_Percent_Ratio")) %>%
arrange(desc(Adj_Percent))
by_race
census
dplyr::rename(`Native American` = `Native, Other = Pacific)
pivot_longer(cols = c("Hispanic", "White", "Black", "Native", "Asian", "Pacific"))
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
# Libraries
library(tidyverse)
library(lubridate)
# Import
shootings <- read.csv("https://raw.githubusercontent.com/washingtonpost/data-police-shootings/master/fatal-police-shootings-data.csv")
# Clean up data
shootings <- shootings %>%
mutate(date = lubridate::ymd(date)) %>%   # Convert date to Lubridate
mutate(age = round(age)) %>%              # Make all ages integers
# Fix blank strings "" --> "not recorded"
mutate(across(.cols = c(name,
manner_of_death,
armed,
age,
gender,
race,
city,
state,
signs_of_mental_illness,
threat_level,
flee,
body_camera),
.fns = ~ifelse(.x == "", "not recorded", .x))) %>%
# Factorize
mutate(gender = as.factor(gender),
race = as.factor(race),
signs_of_mental_illness = as.logical(signs_of_mental_illness),
threat_level = as.factor(threat_level),
flee = as.factor(flee),
body_camera = as.logical(body_camera) )
shootings %>%
mutate(year = year(date)) %>%
mutate(count = 1) %>%
aggregate(count ~ flee + year, data = ., sum) %>%
mutate(percent_of_killed.Total = count / sum(count))
nonweapon <-
shootings %>%
filter(armed == "unarmed" |
armed == "toy weapon" |
armed == "claimed to be armed" |
armed == "unknown weapon" |
armed == "not recorded")
nonweapon %>%
group_by(armed) %>%
count() %>%
arrange(desc(n)) %>%
mutate(`Proportion of Unarmed` = n/length(nonweapon$armed)*100) %>%
mutate(`Percentage of Total` = n/length(shootings$armed)*100) -> nonweapon_proportion
# Display nonweapon statistics
nonweapon_proportion
# Splot proportions split into separate Total and Unarmed facets
nonweapon_proportion %>%
pivot_longer(c("Proportion of Unarmed", "Percentage of Total"),
names_to="Classification",
values_to="Proportion") %>%
ggplot() +
geom_bar(mapping=aes(x=armed, y=Proportion, fill=armed), stat="identity") +
# Separate Unarmed and Total proportions
facet_wrap(Classification~., scales="free_y") +
# Hide x labels
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
labs(title="Breakdown of Unarmed by 'Weapon' & As Percentage of All Deaths",
fill = "Unarmed 'Weapon'")
by_race <- shootings %>%
# Replace abbreviated race identifier with race
mutate(race = as.factor( ifelse(race=="W","White",
ifelse(race=="B","Black",
ifelse(race=="H", "Hispanic",
ifelse(race=="A", "Asian",
ifelse(race=="N", "Native American",
ifelse(race=="O", "Other", "not recorded")))))))) %>%
group_by(race) %>%
count() %>%
arrange(desc(n)) %>%
mutate(percent_of_killed = n/length(shootings$race) * 100)
by_race
# Plot it
by_race %>%
ggplot(aes(x=reorder(race, n), y=n, fill=race)) +
geom_bar(stat="identity") +
coord_flip() +
labs(title="Number of US Police Shootings by Race Since 2015",
x="Race",
y="Number of Deaths")
# Plotting by Year
shootings %>%
# Replace abbreviated race identifier with race
mutate(race = as.factor( ifelse(race=="W","White",
ifelse(race=="B","Black",
ifelse(race=="H", "Hispanic",
ifelse(race=="A", "Asian",
ifelse(race=="N", "Native American",
ifelse(race=="O", "Other", "not recorded")))))))) %>%
mutate(number_killed = rep(1, length(shootings$name))) %>%
aggregate(number_killed ~ year(date) + race, data=., sum) %>%
ggplot(aes(x=`year(date)`, y=number_killed, fill=race)) +
geom_bar(stat="identity", position="dodge2")
shootings %>%
# Replace abbreviated race identifier with race
mutate(race = as.factor( ifelse(race=="W","White",
ifelse(race=="B","Black",
ifelse(race=="H", "Hispanic",
ifelse(race=="A", "Asian",
ifelse(race=="N", "Native American",
ifelse(race=="O", "Other", "not recorded")))))))) %>%
mutate(number_killed = rep(1, length(shootings$name))) %>%
aggregate(number_killed ~ year(date) + race, data=., sum) %>%
ggplot(aes(x=`year(date)`, y=number_killed, color=race)) +
geom_line()
# First, we need each race's total population for 2015-2020.
census <- read.csv(here::here("acs2017_census_tract_data.csv"))
census <- census %>%
# Convert percentages to raw numbers
mutate(across(.cols = c("Hispanic", "White", "Black", "Native", "Asian", "Pacific"),
.fns = ~.x/100.0*TotalPop)) %>%
# Sum them up
select(c("Hispanic", "White", "Black", "Native", "Asian", "Pacific")) %>%
colSums(na.rm = TRUE) %>%
round()
census
# Save total as US Population total
us_population <- sum(census)
# Correct the names to be consistent with our dataset
census <- census %>%
cbind(names(census)) %>%
as.data.frame %>%
mutate(V2 = ifelse(V2 == "Native", "Native American", V2),
V2 = ifelse(V2 == "Pacific", "Other", V2)) %>%
rename(race = V2)
# Flip the order
census <- census[c(2,1)]
# Combine back into by_race
by_race2 <- right_join(census, by_race, by="race")
# Get adjusted percentages by racial populations
by_race2 <- by_race2 %>%
rename(Population = ".")
by_race2 %>%
mutate(Group_Population = as.integer(Population)) %>%
mutate(Group_Population_Percent = Group_Population / us_population * 100) %>%
mutate(Killed_vs_Percent_Ratio = percent_of_killed / (Group_Population_Percent) * 100 ) %>%
mutate(Adj_Percent = n / Group_Population) %>%
select(c("race", "n", "Group_Population_Percent", "percent_of_killed", "Adj_Percent", "Killed_vs_Percent_Ratio")) %>%
arrange(desc(Adj_Percent))
by_race2
census
dplyr::rename(`Native American` = `Native, Other = Pacific)
pivot_longer(cols = c("Hispanic", "White", "Black", "Native", "Asian", "Pacific"))
by_race2 %>%
mutate(Group_Population = as.integer(Population)) %>%
mutate(Group_Population_Percent = Group_Population / us_population * 100) %>%
mutate(Killed_vs_Percent_Ratio = percent_of_killed / (Group_Population_Percent) * 100 ) %>%
mutate(Adj_Percent = n / Group_Population) %>%
select(c("race", "n", "Group_Population_Percent", "percent_of_killed", "Adj_Percent", "Killed_vs_Percent_Ratio")) %>%
arrange(desc(Adj_Percent))
by_race2 %>%
mutate(Group_Population = as.integer(Population)) %>%
mutate(Group_Population_Percent = Group_Population / us_population * 100) %>%
mutate(Killed_vs_Percent_Ratio = percent_of_killed / (Group_Population_Percent) * 100 ) %>%
mutate(Adj_Percent = n / Group_Population)
by_race2 %>%
mutate(Group_Population = as.integer(Population)) %>%
mutate(Group_Population_Percent = Group_Population / us_population * 100) %>%
mutate(Killed_vs_Percent_Ratio = percent_of_killed / (Group_Population_Percent) * 100 ) %>%
mutate(Adj_Percent = n / Group_Population) -> out
sum(out$Population)
# Combine back into by_race
by_race2 <- right_join(census, by_race, by="race")
# Get adjusted percentages by racial populations
by_race2 <- by_race2 %>%
rename(Population = as.integer("."))
# Combine back into by_race
by_race2 <- right_join(census, by_race, by="race")
rm(by_race2)
# Combine back into by_race
by_race2 <- right_join(census, by_race, by="race")
# Get adjusted percentages by racial populations
by_race2 <- by_race2 %>%
rename(Population = as.integer("."))
# Combine back into by_race
by_race2 <- right_join(census, by_race, by="race")
# Get adjusted percentages by racial populations
by_race2 <- by_race2 %>%
rename(Population = ".")
by_race2 %>%
mutate(Group_Population = as.integer(Population)) %>%
mutate(Group_Population_Percent = Group_Population / us_population * 100) %>%
mutate(Killed_vs_Percent_Ratio = percent_of_killed / (Group_Population_Percent) * 100 ) %>%
mutate(Adj_Percent = n / Group_Population) -> out
# Combine back into by_race
by_race2 <- right_join(census, by_race, by="race")
# Get adjusted percentages by racial populations
by_race2 <- by_race2 %>%
rename(Population = ".")
by_race2 %>%
mutate(Population = as.integer(Population)) %>%
mutate(Group_Population = Population) %>%
mutate(Group_Population_Percent = Group_Population / us_population * 100) %>%
mutate(Killed_vs_Percent_Ratio = percent_of_killed / (Group_Population_Percent) * 100 ) %>%
mutate(Adj_Percent = n / Group_Population) -> out
sum(out$Population)
sum(out$Population, na.rm = TRUE)
us_population
out
by_race2 %>%
mutate(Population = as.integer(Population)) %>%
mutate(Group_Population = Population) %>%
mutate(Group_Population_Percent = 100* Group_Population / us_population) %>%
mutate(Killed_vs_Percent_Ratio = percent_of_killed / (Group_Population_Percent) * 100 ) %>%
mutate(Adj_Percent = n / Group_Population) -> out
out
by_race2$Population
out
by_race2 %>%
mutate(Population = as.integer(Population)) %>%
mutate(Group_Population = Population) %>%
mutate(Group_Population_Percent = 100* Group_Population / us_population)
59943368 / us_population
197304759 / us_population
39447902 / us_population
2098354 / us_population
sum(out$Group_Population)
sum(out$Group_Population, na.rm=TRUE)
us_population
sum(out$Group_Population_Percent, na.rm=TRUE)
by_race2 %>%
mutate(Population = as.integer(Population)) %>%
mutate(Group_Population = Population) %>%
mutate(Group_Population_Percent = 100* Group_Population / us_population) %>%
mutate(Killed_vs_Percent_Ratio = percent_of_killed / (Group_Population_Percent) * 100 ) %>%
mutate(Adj_Percent = n / Group_Population) %>%
select(c("race", "n", "Group_Population_Percent", "percent_of_killed", "Adj_Percent", "Killed_vs_Percent_Ratio")) %>%
arrange(desc(Adj_Percent))
by_race2 %>%
mutate(Population = as.integer(Population)) %>%
mutate(Group_Population = Population) %>%
mutate(Group_Population_Percent = 100* Group_Population / us_population) %>%
mutate(Killed_vs_Percent_Ratio = percent_of_killed / (Group_Population_Percent) * 100 ) %>%
select(c("race", "n", "Group_Population_Percent", "percent_of_killed", "Killed_vs_Percent_Ratio")) %>%
arrange(desc(Adj_Percent))
by_race2 %>%
mutate(Population = as.integer(Population)) %>%
mutate(Group_Population = Population) %>%
mutate(Group_Population_Percent = 100* Group_Population / us_population) %>%
mutate(Killed_vs_Percent_Ratio = percent_of_killed / (Group_Population_Percent) * 100 ) %>%
select(c("race", "n", "Group_Population_Percent", "percent_of_killed", "Killed_vs_Percent_Ratio")) %>%
arrange(desc(Adj_Percent))
by_race2 %>%
mutate(Population = as.integer(Population)) %>%
mutate(Group_Population = Population) %>%
mutate(Group_Population_Percent = 100* Group_Population / us_population) %>%
mutate(Killed_vs_Percent_Ratio = percent_of_killed / (Group_Population_Percent) * 100 ) %>%
select(c("race", "n", "Group_Population_Percent", "percent_of_killed", "Killed_vs_Percent_Ratio")) %>%
arrange(desc(Killed_vs_Percent_Ratio))
